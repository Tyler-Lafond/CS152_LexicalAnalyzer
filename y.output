Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   10 identifiers: ident
   11            | ident COMMA identifiers

   12 ident: IDENT

   13 statements: %empty
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statements ENDIF
   17          | IF bool_exp THEN statements ELSE statements ENDIF
   18          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 bool_exp: relation_and_exp
   25         | relation_and_exp OR bool_exp

   26 relation_and_exp: relation_exp
   27                 | relation_exp AND relation_and_exp

   28 relation_exp: NOT expression comp expression
   29             | expression comp expression
   30             | NOT TRUE
   31             | TRUE
   32             | NOT FALSE
   33             | FALSE
   34             | NOT L_PAREN bool_exp R_PAREN
   35             | L_PAREN bool_exp R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expressions: %empty
   43            | expression
   44            | expression COMMA expressions

   45 expression: multiplicative_exp
   46           | multiplicative_exp ADD expression
   47           | multiplicative_exp SUB expression

   48 multiplicative_exp: term
   49                   | term MULT multiplicative_exp
   50                   | term DIV multiplicative_exp
   51                   | term MOD multiplicative_exp

   52 term: SUB var
   53     | var
   54     | SUB NUMBER
   55     | NUMBER
   56     | SUB L_PAREN expression R_PAREN
   57     | L_PAREN expression R_PAREN
   58     | ident L_PAREN expressions R_PAREN

   59 vars: var
   60     | var COMMA vars

   61 var: ident
   62    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 8
ENUM (267) 9
OF (268) 8
IF (269) 16 17
THEN (270) 16 17
ENDIF (271) 16 17
ELSE (272) 17
WHILE (273) 18 19
DO (274) 19
BEGINLOOP (275) 18 19
ENDLOOP (276) 18 19
CONTINUE (277) 22
READ (278) 20
WRITE (279) 21
AND (280) 27
OR (281) 25
NOT (282) 28 30 32 34
TRUE (283) 30 31
FALSE (284) 32 33
RETURN (285) 23
ADD (286) 46
SUB (287) 47 52 54 56
USUB (288)
MULT (289) 49
DIV (290) 50
MOD (291) 51
EQ (292) 36
NEQ (293) 37
LT (294) 38
GT (295) 39
LTE (296) 40
GTE (297) 41
SEMICOLON (298) 4 6 14
COLON (299) 7 8 9
COMMA (300) 11 44 60
L_PAREN (301) 9 34 35 56 57 58
R_PAREN (302) 9 34 35 56 57 58
L_SQUARE_BRACKET (303) 8 62
R_SQUARE_BRACKET (304) 8 62
ASSIGN (305) 15
NUMBER (306) 8 54 55
IDENT (307) 12


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9, on right: 6
identifiers (59)
    on left: 10 11, on right: 7 8 9 11
ident (60)
    on left: 12, on right: 4 10 11 58 61 62
statements (61)
    on left: 13 14, on right: 4 14 16 17 18 19
statement (62)
    on left: 15 16 17 18 19 20 21 22 23, on right: 14
bool_exp (63)
    on left: 24 25, on right: 16 17 18 19 25 34 35
relation_and_exp (64)
    on left: 26 27, on right: 24 25 27
relation_exp (65)
    on left: 28 29 30 31 32 33 34 35, on right: 26 27
comp (66)
    on left: 36 37 38 39 40 41, on right: 28 29
expressions (67)
    on left: 42 43 44, on right: 44 58
expression (68)
    on left: 45 46 47, on right: 15 23 28 29 43 44 46 47 56 57 62
multiplicative_exp (69)
    on left: 48 49 50 51, on right: 45 46 47 49 50 51
term (70)
    on left: 52 53 54 55 56 57 58, on right: 48 49 50 51
vars (71)
    on left: 59 60, on right: 20 21 60
var (72)
    on left: 61 62, on right: 15 52 53 59 60


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   12 ident: IDENT .

    $default  reduce using rule 12 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 17


State 14

   10 identifiers: ident .
   11            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 10 (identifiers)


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   11 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 24
    ident        go to state 14


State 19

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    9 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 27


State 24

   11 identifiers: ident COMMA identifiers .

    $default  reduce using rule 11 (identifiers)


State 25

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    9 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 5

    identifiers  go to state 30
    ident        go to state 14


State 28

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    9 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 33


State 31

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 42
    statement   go to state 43
    var         go to state 44


State 32

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 33

    9 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 9 (declaration)


State 34

   16 statement: IF . bool_exp THEN statements ENDIF
   17          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    bool_exp            go to state 53
    relation_and_exp    go to state 54
    relation_exp        go to state 55
    expression          go to state 56
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 35

   18 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    bool_exp            go to state 60
    relation_and_exp    go to state 54
    relation_exp        go to state 55
    expression          go to state 56
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 36

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 61


State 37

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 38

   20 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    vars   go to state 62
    var    go to state 63


State 39

   21 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    vars   go to state 64
    var    go to state 63


State 40

   23 statement: RETURN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 66
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 41

   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 61 (var)


State 42

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 43

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 69


State 44

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 70


State 45

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


State 46

   28 relation_exp: NOT . expression comp expression
   30             | NOT . TRUE
   32             | NOT . FALSE
   34             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 72
    FALSE    shift, and go to state 73
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 75
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 47

   31 relation_exp: TRUE .

    $default  reduce using rule 31 (relation_exp)


State 48

   33 relation_exp: FALSE .

    $default  reduce using rule 33 (relation_exp)


State 49

   52 term: SUB . var
   54     | SUB . NUMBER
   56     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 77
    IDENT    shift, and go to state 5

    ident  go to state 41
    var    go to state 78


State 50

   35 relation_exp: L_PAREN . bool_exp R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    bool_exp            go to state 79
    relation_and_exp    go to state 54
    relation_exp        go to state 55
    expression          go to state 80
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 51

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


State 52

   58 term: ident . L_PAREN expressions R_PAREN
   61 var: ident .
   62    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 61 (var)


State 53

   16 statement: IF bool_exp . THEN statements ENDIF
   17          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 82


State 54

   24 bool_exp: relation_and_exp .
   25         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 83

    $default  reduce using rule 24 (bool_exp)


State 55

   26 relation_and_exp: relation_exp .
   27                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 84

    $default  reduce using rule 26 (relation_and_exp)


State 56

   29 relation_exp: expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 91


State 57

   45 expression: multiplicative_exp .
   46           | multiplicative_exp . ADD expression
   47           | multiplicative_exp . SUB expression

    ADD  shift, and go to state 92
    SUB  shift, and go to state 93

    $default  reduce using rule 45 (expression)


State 58

   48 multiplicative_exp: term .
   49                   | term . MULT multiplicative_exp
   50                   | term . DIV multiplicative_exp
   51                   | term . MOD multiplicative_exp

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 48 (multiplicative_exp)


State 59

   53 term: var .

    $default  reduce using rule 53 (term)


State 60

   18 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 97


State 61

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 98
    statement   go to state 43
    var         go to state 44


State 62

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 63

   59 vars: var .
   60     | var . COMMA vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 59 (vars)


State 64

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 65

   57 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 100
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 66

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 67

   62 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 101
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 68

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 69

   14 statements: statement SEMICOLON . statements

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 102
    statement   go to state 43
    var         go to state 44


State 70

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 103
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 71

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 72

   30 relation_exp: NOT TRUE .

    $default  reduce using rule 30 (relation_exp)


State 73

   32 relation_exp: NOT FALSE .

    $default  reduce using rule 32 (relation_exp)


State 74

   34 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    bool_exp            go to state 104
    relation_and_exp    go to state 54
    relation_exp        go to state 55
    expression          go to state 80
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 75

   28 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    comp  go to state 105


State 76

   56 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 106
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 77

   54 term: SUB NUMBER .

    $default  reduce using rule 54 (term)


State 78

   52 term: SUB var .

    $default  reduce using rule 52 (term)


State 79

   35 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 107


State 80

   29 relation_exp: expression . comp expression
   57 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 108

    comp  go to state 91


State 81

   58 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    $default  reduce using rule 42 (expressions)

    ident               go to state 52
    expressions         go to state 109
    expression          go to state 110
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 82

   16 statement: IF bool_exp THEN . statements ENDIF
   17          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 111
    statement   go to state 43
    var         go to state 44


State 83

   25 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    bool_exp            go to state 112
    relation_and_exp    go to state 54
    relation_exp        go to state 55
    expression          go to state 56
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 84

   27 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    relation_and_exp    go to state 113
    relation_exp        go to state 55
    expression          go to state 56
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 85

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


State 86

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


State 87

   38 comp: LT .

    $default  reduce using rule 38 (comp)


State 88

   39 comp: GT .

    $default  reduce using rule 39 (comp)


State 89

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


State 90

   41 comp: GTE .

    $default  reduce using rule 41 (comp)


State 91

   29 relation_exp: expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 114
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 92

   46 expression: multiplicative_exp ADD . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 115
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 93

   47 expression: multiplicative_exp SUB . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 116
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 94

   49 multiplicative_exp: term MULT . multiplicative_exp

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    multiplicative_exp  go to state 117
    term                go to state 58
    var                 go to state 59


State 95

   50 multiplicative_exp: term DIV . multiplicative_exp

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    multiplicative_exp  go to state 118
    term                go to state 58
    var                 go to state 59


State 96

   51 multiplicative_exp: term MOD . multiplicative_exp

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    multiplicative_exp  go to state 119
    term                go to state 58
    var                 go to state 59


State 97

   18 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 120
    statement   go to state 43
    var         go to state 44


State 98

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 121


State 99

   60 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 41
    vars   go to state 122
    var    go to state 63


State 100

   57 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 101

   62 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 102

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 103

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 104

   34 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 124


State 105

   28 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    expression          go to state 125
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 106

   56 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 126


State 107

   35 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 35 (relation_exp)


State 108

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 109

   58 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 110

   43 expressions: expression .
   44            | expression . COMMA expressions

    COMMA  shift, and go to state 128

    $default  reduce using rule 43 (expressions)


State 111

   16 statement: IF bool_exp THEN statements . ENDIF
   17          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 112

   25 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 25 (bool_exp)


State 113

   27 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 27 (relation_and_exp)


State 114

   29 relation_exp: expression comp expression .

    $default  reduce using rule 29 (relation_exp)


State 115

   46 expression: multiplicative_exp ADD expression .

    $default  reduce using rule 46 (expression)


State 116

   47 expression: multiplicative_exp SUB expression .

    $default  reduce using rule 47 (expression)


State 117

   49 multiplicative_exp: term MULT multiplicative_exp .

    $default  reduce using rule 49 (multiplicative_exp)


State 118

   50 multiplicative_exp: term DIV multiplicative_exp .

    $default  reduce using rule 50 (multiplicative_exp)


State 119

   51 multiplicative_exp: term MOD multiplicative_exp .

    $default  reduce using rule 51 (multiplicative_exp)


State 120

   18 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 121

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 132


State 122

   60 vars: var COMMA vars .

    $default  reduce using rule 60 (vars)


State 123

   62 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


State 124

   34 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 34 (relation_exp)


State 125

   28 relation_exp: NOT expression comp expression .

    $default  reduce using rule 28 (relation_exp)


State 126

   56 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term)


State 127

   58 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (term)


State 128

   44 expressions: expression COMMA . expressions

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    $default  reduce using rule 42 (expressions)

    ident               go to state 52
    expressions         go to state 133
    expression          go to state 110
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 129

   16 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 130

   17 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 13 (statements)

    ident       go to state 41
    statements  go to state 134
    statement   go to state 43
    var         go to state 44


State 131

   18 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 132

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident               go to state 52
    bool_exp            go to state 135
    relation_and_exp    go to state 54
    relation_exp        go to state 55
    expression          go to state 56
    multiplicative_exp  go to state 57
    term                go to state 58
    var                 go to state 59


State 133

   44 expressions: expression COMMA expressions .

    $default  reduce using rule 44 (expressions)


State 134

   17 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 136


State 135

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 19 (statement)


State 136

   17 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)
